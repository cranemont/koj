version: '3.9'
services:
  db:
    image: postgres:14-alpine
    container_name: postgres
    restart: unless-stopped
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=skku
      - POSTGRES_USER=skku
      - POSTGRES_DB=skku
    expose:
      - 5432
  pgbouncer:
    image: edoburu/pgbouncer:1.17.0
    container_name: pgbouncer
    depends_on:
      - db
    environment:
      - DB_USER=skku
      - DB_PASSWORD=skku
      - DB_HOST=posgres
      - DB_NAME=skku
      - POOL_MODE=transaction
      - ADMIN_USERS=postgres,skku
      - DB_PORT=5432
      - MIN_POOL_SIZE=30
      - DEFAULT_POOL_SIZE=40
      - MAX_CLIENT_CONN=2000
      - SERVER_CHECK_DELAY=100
    expose:
      - 5432
    
  rabbitmq:
    image: rabbitmq:3-management-alpine
    networks:
      - web
      - default
    ports:
      - 15672:15672
    expose:
      - 5672
    environment:
      - RABBITMQ_ERLANG_COOKIE=RabbitMQ-My-Cookies
      - RABBITMQ_DEFAULT_USER=skku
      - RABBITMQ_DEFAULT_PASS=1234
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.rabbitmq.rule=Host(`rabbitmq.localhost`)'
      - 'traefik.http.services.rabbitmq.loadbalancer.server.port=15672'
      - 'traefik.docker.network=traefik_default'
      - 'traefik.http.routers.rabbitmq.entrypoints=websecure'
      - 'traefik.http.routers.rabbitmq.tls.certresolver=myresolver'
  setup:
    image: python:3.8-alpine
    depends_on:
      - rabbitmq
    networks:
      - web
      - default
    volumes:
      - ./scripts/rabbitmq-setup.sh:/setup.sh
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    entrypoint:
      - /setup.sh
  redis:
    container_name: redis
    image: redis:alpine
    expose:
      - 6379
  backend:
    image: coc0a25/next-backend:deploy
    networks:
      - web
      - default
    restart: always
    depends_on:
      - db
      - rabbitmq
      - setup
    expose:
      - 3000
    environment:
      - RABBITMQ_USER=skku
      - RABBITMQ_PASS=1234
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.backend.rule=PathPrefix(`/api`)'
      - 'traefik.http.middlewares.remove-api-prefix.stripprefix.prefixes=/api,/'
      - 'traefik.http.routers.backend.middlewares=remove-api-prefix@docker'
      - 'traefik.http.services.backend.loadbalancer.server.port=3000'
      - 'traefik.http.routers.backend.entrypoints=websecure'
      - 'traefik.http.routers.backend.tls.certresolver=myresolver'
      - 'traefik.docker.network=traefik_default'
  judge-server:
    # container_name: judge-server
    image: coc0a25/judge-server:deploy
    restart: always
    depends_on:
      - redis
      - rabbitmq
      - setup
    environment:
      - TESTCASE_SERVER_URL=http://backend:3000/testcase/problem/
      - TESTCASE_SERVER_AUTH_TOKEN=AUTH_TOKEN
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBITMQ_DEFAULT_USER=skku
      - RABBITMQ_DEFAULT_PASS=1234
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    # cpuset: "0,1,2"
    expose:
      - 10000
    labels:
      - 'traefik.enable=true'
      - 'traefik.docker.network=inbound'
networks:
  web:
    name: traefik_default
