# <sources>
# https://www.tomray.dev/nestjs-docker-production
# https://medium.com/@alpercitak/nest-js-use-pnpm-on-docker-81998ab4d8a1

# use -f flag to build


FROM node:18-alpine AS base

WORKDIR /app

RUN npm i -g pnpm
RUN pnpm config set store-dir /app/.pnpm-store
RUN mkdir backend

###################
# BUILD FOR LOCAL DEVELOPMENT
###################
FROM base as development

COPY --chown=node:node ./backend/package.json ./backend
COPY --chown=node:node ./package.json ./
COPY --chown=node:node ./.npmrc ./
COPY --chown=node:node ./pnpm-lock.yaml ./
COPY --chown=node:node ./pnpm-workspace.yaml ./

# should not include --prod flag bcause the @nestjs/cli is in the devdependencies
RUN pnpm install --frozen-lockfile

COPY --chown=node:node . .

USER node

###################
# BUILD FOR PRODUCTION
###################
FROM base as build

COPY --chown=node:node --from=development /app/backend/node_modules ./backend/node_modules
COPY --chown=node:node --from=development /app/node_modules ./node_modules
COPY --chown=node:node --from=development /app/.pnpm-store ./.pnpm-store

COPY --chown=node:node . .

ENV NODE_ENV production
RUN cd backend && pnpm build
RUN pnpm prune --prod && pnpm store prune

USER node

###################
# PRODUCTION
###################
FROM node:18-alpine AS production

WORKDIR /app
RUN mkdir backend

COPY --chown=node:node --from=build /app/node_modules ./node_modules
COPY --chown=node:node --from=build /app/backend/node_modules ./backend/node_modules
COPY --chown=node:node --from=build /app/backend/dist ./backend/dist/

CMD [ "node", "./backend/dist/main.js" ]