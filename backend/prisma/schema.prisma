// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Problem {
  id                Int        @id @default(autoincrement())
  title             String
  description       String
  inputDescription  String     @map("input_description")
  outputDescription String     @map("output_description")
  hint              String
  languages         Language[]
  timeLimit         Int        @map("time_limit")
  memoryLimit       Int        @map("memory_limit")
  difficulty        String
  source            Json
  shared            Boolean    @default(false)
  submissionNum     Int        @default(0) @map("submission_num")
  acceptedNum       Int        @default(0) @map("accepted_num")
  score             Int        @default(0)
  createTime        DateTime   @default(now()) @map("create_time")
  updateTime        DateTime   @updatedAt @map("update_time")

  Testcase   Testcase[]
  Submission Submission[]

  @@map("problem")
}

model Testcase {
  id         String   @id @default(uuid())
  problem    Problem  @relation(fields: [problemId], references: [id])
  problemId  Int      @map("problem_id")
  order      Int
  input      String
  output     String
  score      Int      @default(0)
  createTime DateTime @default(now()) @map("create_time")
  updateTime DateTime @updatedAt @map("update_time")

  @@map("testcase")
}

model Submission {
  id         Int      @id @default(autoincrement())
  problem    Problem  @relation(fields: [problemId], references: [id])
  problemId  Int      @map("problem_id")
  code       String
  language   Language
  shared     Boolean  @default(false)
  ipAddr     String   @map("ip_addr")
  createTime DateTime @default(now()) @map("create_time")
  updateTime DateTime @updatedAt @map("update_time")

  @@map("submission")
}

enum Language {
  C
  Cpp
  Python2
  Python3
  Golang
  Java
}

model SubmissionResult {
  id            Int        @id @default(autoincrement())
  submissionId  Int        @map("submission_id")
  resultCode    ResultCode @map("result_code")
  acceptedNum   Int?       @map("accepted_num")
  totalTestcase Int?       @map("total_testcase")
  createTime    DateTime   @default(now()) @map("create_time")
  updateTime    DateTime   @updatedAt @map("update_time")
  judgeResult   Json?      @map("judge_result")
  errorMessage  String?    @map("error_message")

  @@map("submssion_result")
}

enum ResultCode {
  // default(before judging)
  JUDGING
  // successful running code
  ACCEPTED
  WRONG_ANSWER
  CPU_TIME_LIMIT_EXCEEDED
  REAL_TIME_LIMIT_EXCEEDED
  MEMORY_LIMIT_EXCEEDED
  RUNTIME_ERROR
  // error
  COMPILE_ERROR
  SERVER_ERROR
}
